calc shell script examples
--------------------------

These calc shell scripts are provided because they serve as examples of
how use the calc language, and/or because the authors thought them to
be useful!

Please note that calc shell scripts must start with the line:

    #!/usr/local/src/bin/calc/calc -q -f

The above line MUST start in column 1 of the first line.   The first line
must also end in -f.  The -q is optional, but is recommended to disable
the processing of calc startup scripts.

Also please note that single # shell line comments are not supported in calc.
Comments must be /* c-like comment */ or start with a double ## symbol.

This is the correct way to form a calc shell script:

    #!/usr/local/src/bin/calc/calc -q -f

    /* a correct comment */
    ## another correct comment
    ### two or more together is also a comment
    /*
     * another correct comment
     */
    print "2+2 =", 2+2; ## yet another comment

The first argument after the path to calc executable must be an -S.
The next arguments are optional.  The -q is often recommended because
it will disable the processing of the startup scripts.

For more informaton about calc command lines, see "help usage".

This next example WRONG:

    #!/usr/local/src/bin/calc/calc -q

    # This is not a calc calc comment because it has only a single #
    # You must to start comments with ## or /*
    # is is also wrong because the first line does not end in -f
    print "This example has invalid comments"

=-=

For more info, see:

    help script
    help cscript

#####

4dsphere

    Determine if 6 points lie on the surface of a 4-dimensional sphere in R^4.

    4dsphere x0 y0 z0 w0   x1 y1 z1 w1   ...   x5 y5 z5 w5

        x0 y0 z0 w0     point 0 in R^4
        x1 y1 z1 w1     point 1 in R^4
        ...             ...
        x5 y5 z5 w5     point 5 in R^4


fproduct filename term ...

    Write the big Endian product of terms to a file.  Use - for stdout.


mersenne exp

    Print the value of 2^exp-1.


piforever

    Print the value of pi forever, or as long as you CPU / memory allows.


plus arg ...

    Print the sum of 1 or more arguments.


powerterm [base_limit] value

    Print the value as a sum (or difference) of powers of integers up
    to and including powers <= base_limit.  By default, base_limit is 10000.


simple

    A trivial example of a calc shell script.

## Copyright (C) 1999,2014,2021  Landon Curt Noll
##
## Calc is open software; you can redistribute it and/or modify it under
## the terms of the version 2.1 of the GNU Lesser General Public License
## as published by the Free Software Foundation.
##
## Calc is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
## or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General
## Public License for more details.
##
## A copy of version 2.1 of the GNU Lesser General Public License is
## distributed with calc under the filename COPYING-LGPL.  You should have
## received a copy with calc; if not, write to Free Software Foundation, Inc.
## 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
##
## Under source code control:   1999/12/17 10:23:40
## File existed as early as:    1999
##
## chongo <was here> /\oo/\     http://www.isthe.com/chongo/
## Share and enjoy!  :-)        http://www.isthe.com/chongo/tech/comp/calc/
